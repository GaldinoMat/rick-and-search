import CharactersSection from "@/components/CharactersSection";
import { loadFavourites } from "@/store/modules/data/actions";
import { Character, CharacterState } from "@/store/modules/data/types";
import React, { useEffect, useState } from "react";
import { useSelector, useDispatch } from "react-redux";
import Head from "next/head";
import FavouritesPaginationButton from "@/components/FavouritesPage/FavouritesPaginationButton";
import { CharactersSectionComponent, PaginationComponent } from "./styles";

export function splitArray(array: any[]) {
  const subarrays = [];
  for (let i = 0; i < array?.length; i += 20) {
    subarrays.push(array?.slice(i, i + 20));
  }
  return subarrays;
}

function Favourites() {
  const data = useSelector<CharacterState, CharacterState>((state) => state)
    .characters?.favourites;

  const dispatch = useDispatch();

  const [paginatedFavourites, setPaginatedFavourites] = useState<Character[][]>(
    []
  );
  const [displayedFavorites, setdisplayedFavorites] = useState<Character[]>([]);
  const [currentPage, setcurrentPage] = useState(1);

  const handleChangeFavouritePage = (index: number) => {
    setdisplayedFavorites(paginatedFavourites[index]);
    setcurrentPage(index + 1);
  };

  useEffect(() => {
    const favouritesJson = JSON.parse(
      window.localStorage.getItem("favourites") as string
    );

    if (favouritesJson !== null) dispatch(loadFavourites(favouritesJson));
  }, [dispatch]);

  useEffect(() => {
    setPaginatedFavourites(splitArray(data));
  }, [data]);

  useEffect(() => {
    setdisplayedFavorites(paginatedFavourites[0]);
  }, [paginatedFavourites]);

  return (
    <>
      <Head>
        <title>Rick and Searchy! | Favourites</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section data-testid="test-favourites">
        <div>
          <h1>Your favourites!</h1>
        </div>
        <div>
          {data?.length === 0 ? (
            <h2 data-testid="test-no-favourites">Sorry, no favorites here!</h2>
          ) : (
            <CharactersSectionComponent>
              <CharactersSection charactersData={displayedFavorites} />
              <PaginationComponent>
                {paginatedFavourites.map((array, index) => (
                  <FavouritesPaginationButton
                    handleChangeFavouritePage={handleChangeFavouritePage}
                    index={index}
                    key={index}
                    currentPage={currentPage}
                  />
                ))}
              </PaginationComponent>
            </CharactersSectionComponent>
          )}
        </div>
      </section>
    </>
  );
}

export default Favourites;
