import CharactersSection from "@/components/CharactersSection";
import { fetchFromAPI, loadFoundResults } from "@/store/modules/data/actions";
import { CharacterState } from "@/store/modules/data/types";
import React, { useState } from "react";
import { useSelector, useDispatch } from "react-redux";
import { apiGet } from "../api/api";
import Head from "next/head";
import Pagination from "@/components/SearchPagination";
import SearchForm from "@/components/SearchForm";
import styled from "styled-components";

const CharactersSectionComponent = styled.section`
  padding: 0 2.125rem;
  padding-top: 1.5rem;
`;

function Search() {
  const data = useSelector<CharacterState, CharacterState>(
    (state) => state
  ).characters;

  const dispatch = useDispatch();
  const [queryType, setQueryType] = useState("name");
  const [query, setQuery] = useState("");

  const handleSearch = async () => {
    await apiGet(
      dispatch,
      fetchFromAPI(`/?${queryType}=${query.toLowerCase()}`),
      loadFoundResults
    );
  };

  const handleChange = (e: Event) => {
    const { target } = e;
    if (target) {
      setQueryType((target as HTMLSelectElement).value);
    }
  };

  return (
    <>
      <Head>
        <title>Rick and Searchy! | Search</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <SearchForm
        handleChange={handleChange}
        handleSearch={handleSearch}
        query={query}
        setQuery={setQuery}
      />
      <CharactersSectionComponent>
        {data?.results?.length !== 0 && (
          <>
            <CharactersSection charactersData={data?.results} />
            <Pagination data={data} />
          </>
        )}
      </CharactersSectionComponent>
    </>
  );
}

export default Search;
